services:

	accountPasswordControlFactory:
		implement: App\Model\Components\IAccountPasswordControlFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	recipientsSelectBoxFactory:
		class: App\Forms\Fields\RecipientsSelectBoxFactory

	passwordChangeFormFactory: App\Model\Factories\PasswordChangeFormFactory
	listingFormFactory: App\Model\Components\ListingFormFactory

	itemUpdateFormFactory:
		class: App\Model\Components\ItemUpdateFormFactory(%defaultItemTime%)

	itemFormControlFactory:
		implement: App\Model\Components\IItemFormControlFactory
		parameters: [App\Model\Domain\Entities\Listing listing, day]
		arguments: [%listing%, %day%]

	filterControlFactory:
		implement: App\Model\Components\IFilterControlFactory

	listingCopyFormControlFactory:
		implement: App\Model\Components\IListingCopyFormControlFactory
		parameters: [App\Model\Domain\Entities\Listing listing]
		arguments: [%listing%]

	listingRemovalControlFactory:
		implement: App\Model\Components\IListingRemovalControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]

	listingPDFGenerationControlFactory:
		implement: App\Model\Components\IListingPDFGenerationControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]
		setup:
			- setCompanyParameters(%company%)

	annualPDFGenerationControlFactory:
		implement: App\Model\Components\IAnnualPDFGenerationControlFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%, %company%]

	listingActionMenuControlFactory:
		implement: App\Model\Components\IListingActionsMenuControlFactory
		parameters: [App\Model\Domain\Entities\Listing listing]
		arguments: [%listing%]

	itemsTableControlFactory:
		implement: App\Model\Components\ItemsTable\IItemsTableControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]

	listingTableControlFactory:
		implement: App\Model\Components\ListingTable\IListingTableControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]

	massItemChangeControlFactory:
		implement: App\Model\Components\IMassItemsChangeControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]

	sharingListingControlFactory:
		implement: App\Model\Components\ISharingListingControlFactory
		parameters: [App\Model\ResultObjects\ListingResult listingResult]
		arguments: [%listingResult%]

	listingFormControlFactory:
		implement: App\Model\Components\IListingFormControlFactory
		parameters: [listing, App\Model\Domain\Entities\User owner]
		arguments: [%listing%, %owner%]

	listingDescriptionControlFactory:
		implement: App\Model\Components\IListingDescriptionControlFactory
		parameters: [App\Model\Domain\Entities\Listing listing]
		arguments: [%listing%]

	listingsOverviewControlFactory:
		implement: App\Model\Components\IListingsOverviewControlFactory
		parameters: [App\Model\Queries\Listings\ListingsForOverviewQuery listingsQuery]
		arguments: [%listingsQuery%]

	paginatorFactory: \Components\IPaginatorFactory

	manualDatabaseBackupControlFactory:
		implement: App\Model\Components\IManualDatabaseBackupControlFactory
		setup:
			- addBackupHandler(@emailBackupHandler)
			- addBackupHandler(@fileBackupHandler)

	databaseBackupControlFactory:
		implement: App\Model\Components\IDatabaseBackupControlFactory
		setup:
			- setPasswordForBackup(%backup.password%)
			- addBackupHandler(@emailBackupHandler)
			- addBackupHandler(@fileBackupHandler)

	invitationGenerationControlFactory:
		implement: App\Model\Components\IInvitationGenerationControlFactory

	invitationsManagementControlFactory:
		implement: App\Model\Components\IInvitationsManagementControlFactory
		parameters: [App\Model\Query\InvitationsQuery query]
		arguments: [%query%]

	userBlockingControlFactory:
		implement: App\Model\Components\IUserBlockingControlFactory
		parameters: [userBeingBlockedId, App\Model\Domain\Entities\User user]
		arguments: [%userBeingBlockedId%, %user%]

	usersOverviewControlFactory:
		implement: App\Model\Components\IUsersOverviewControlFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	usersBlockingManagementControlFactory:
		implement: App\Model\Components\IUsersBlockingManagementControlFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	# Messages

	# handlers
	receivedUnreadMessagesHandlerFactory:
		implement: App\Model\MessagesHandlers\IReceivedUnreadMessagesHandlerFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	receivedReadMessagesHandlerFactory:
		implement: App\Model\MessagesHandlers\IReceivedReadMessagesHandlerFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	sentMessagesHandlerFactory:
		implement: App\Model\MessagesHandlers\ISentMessagesHandlerFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	# components

	messagesTableControlFactory:
		implement: App\Model\Components\IMessagesTableControlFactory
		parameters: [App\Model\MessagesHandlers\IMessagesHandler handler]
		arguments: [%handler%]

	messageDetailControlFactory:
		implement: App\Model\Components\IMessageDetailControlFactory
		parameters: [App\Model\Domain\Entities\IMessage message]
		arguments: [%message%]

	messageRecipientsControlFactory:
		implement: App\Model\Components\IMessageRecipientsControlFactory
		parameters: [array recipients]
		arguments: [%recipients%]

	newMessageControlFactory:
		implement: App\Model\Components\INewMessageControlFactory
		parameters: [App\Model\Domain\Entities\User user]
		arguments: [%user%]

	usersRelationshipsRestrictionsControlFactory:
		implement: App\Model\Components\IUsersRelationshipsRestrictionsControlFactory
		parameters: [array usersBlockedByMe, array usersBlockingMe, array suspendedUsers]
		arguments: [%usersBlockedByMe%, %usersBlockingMe%, %suspendedUsers%]